{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourcegroup().location]",
      "metadata": {
        "description": "Specifies the Location for the deployment."
      }
    },	
    "artifactsLocationSasToken": {
      "type": "string",
      "metadata": {
        "description": "Token allowing for access of asset location"
      }
    },
	"configurationFileUrl": {
      "type": "string",
      "metadata": {
        "description": "Specifies the URI of the DSC configuration script."
      }
    },
    "configurationFunction": {
      "type": "string",
      "metadata": {
        "description": "Specifies the function to be executed in the DSC configuration script."
      }
    },
	"machineName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of this machine in Azure and on the network."
      }
    },
	"domainName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the Active Directory domain."
      }
    },
	"domainUsername": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name Existing domain Username that will be used to Join Domain."
      }
    },
    "domainPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Specifies the Existing domain Password for Domain User that will be used to Join Domain."
      }
    },
	"domainControllerIp": {
      "type": "string",
      "metadata": {
        "description": "Specifies the IP of a domain controller on the virtual network."
      }
    },
	"adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'admin','administrator"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and the domain"
      }
    },
	"deliveryControllerFQDN": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the XenApp delivery controller on the virtual network."
      }
    },		
	"InstallerPath": {	  
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the XenApp delivery controller on the virtual network."
      }
    },
	"CreateMasterImage": {
      "type": "string",
      "metadata": {
        "description": "Specify wether VDI should be provisioned or Not."
      },
      "defaultValue": "false",
      "allowedValues": [
        "true",
        "false"
      ]
    }
  },
  "variables": {		
	
  },
  "resources": [
	{
		"type": "Microsoft.Compute/virtualMachines/extensions",
		"name": "[concat(parameters('machineName'),'/configureController')]",
		"apiVersion": "2015-06-15",
		"tags": {
			"displayName": "VdiServerConfiguration"
		},		
		"location": "[parameters('location')]",		
		"properties": {
			"publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
             "settings": {
				"sasToken": "[parameters('artifactsLocationSasToken')]",
				"modulesUrl": "[parameters('configurationFileUrl')]",
				"configurationFunction": "[parameters('configurationFunction')]",
				"Properties": {
			    "Admincreds": {
						"UserName": "[parameters('adminUsername')]",
						"Password": "PrivateSettingsRef:adminPassword"
					},
					"DomainCreds": {
						"UserName": "[parameters('domainUsername')]",
						"Password": "PrivateSettingsRef:domainPassword"
					},
				"DomainName": "[parameters('domainName')]",
			    "DeliveryController": "[parameters('deliveryControllerFQDN')]",
			    "DomainControllerIp": "[parameters('domainControllerIp')]",
				"setupLocation": "[parameters('InstallerPath')]",
				"CreateMasterImage": "[parameters('CreateMasterImage')]"
				}
			},
			"protectedSettings": {
				"Items": {
					"AdminPassword": "[parameters('adminPassword')]",
					"DomainPassword": "[parameters('domainPassword')]"
				}
			}
		}
	}
  ]
}