{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vhdStorageAccount": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the storage account used for virtual machine disks. This has to be a unique name, up to 24 chars, all lowercase."
      }
    },
    "imageUri": {
      "type": "string",
      "metadata": {
        "description": "Specifies the user image URI to provision this machine on. Must contain the 7.7 release of XenApp."
      }
    },
    "publisher": {
      "type": "string",
      "metadata": {
        "description": "Specifies the marketplace publisher of the image to provision this machine on."
      }
    },
    "sku": {
      "type": "string",
      "metadata": {
        "description": "Specifies the marketplace offer of the image to provision this machine on."
      }
    },
    "offer": {
      "type": "string",
      "metadata": {
        "description": "Specifies the marketplace sku of the image to provision this machine on."
      }
    },
    "machineName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of this machine in Azure and on the network."
      }
    },
    "machineSize": {
      "type": "string",
      "defaultValue": "Standard_A2",    
      "metadata": {
        "description": "Specifies the size of the virtual machine."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourcegroup().location]",
      "metadata": {
        "description": "Specifies the Location for the deployment."
      }
    },
    "availabilitySetId": {
      "type": "string",
      "metadata": {
        "description": "Specifies the availability set this machine should belong to."
      }
    },
    "subnetId": {
      "type": "string",
      "metadata": {
        "description": "Specifies the id of the subnet the machine should connect to."
      }
    },
    "privateIp": {
      "type": "string",
      "metadata": {
        "description": "Specifies the private IP on the subnet the machine should connect to."
      }
    },
    "dnsServers": {
      "type": "array",
      "metadata": {
        "description": "Specifies a list of DNS servers the machine should use."
      }
    },
    "lbBapId": {
      "type": "string",
      "metadata": {
        "description": "Specifies the id of the load balancer's back end address pool."
      }
    },
    "lbInboundRules": {
      "type": "array",
      "metadata": {
        "description": "Specifies a list of inbound NAT rules to apply to this VM."
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the Active Directory domain."
      }
    },
    "domainControllerIp": {
      "type": "string",
      "metadata": {
        "description": "Specifies the IP of a domain controller on the virtual network."
      }
    },
    "domainControllerFQDN": {
      "type": "string",
      "metadata": {
        "description": "Specifies the FQDN of a domain controller on the virtual network."
      }
    },
    "packages": {
      "type": "array",
      "metadata": {
        "description": "Specifies a list of chocolatey packages to install on the VDA."
      }
    },
    "publishedApplications": {
      "type": "array",
      "metadata": {
        "description": "Specifies a list of applications to publish through XenApp."
      }
    },
    "storeFrontUrl": {
      "type": "string",
      "metadata": {
        "description": "Specifies the internal URL for StoreFront."
      }
    },
    "deliveryControllerFQDN": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the XenApp delivery controller on the virtual network."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the administrator for machines, Active Directory domain, NetScaler and XenApp. Exclusion list: 'admin','administrator'. Must be no more than 9 alphanumeric characters."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Specifies the password of the administrator for machines, Active Directory domain, NetScaler and XenApp."
      }
    },
    "deploymentFQDN": {
      "type": "string",
      "metadata": {
        "description": "Specifies the FQDN of the Azure public IP to which the gateway FQDN will be forwarded."
      }
    },
    "gatewayFQDN": {
      "type": "string",
      "metadata": {
        "description": "Specifies the FQDN where the user will reach the deployment."
      }
    },
    "artifactsLocationUri": {
      "type": "string",
      "metadata": {
        "description": "Specifies the base location of the child templates and desired state configuration scripts."
      }
    },
    "artifactsLocationSasToken": {
      "type": "string",
      "metadata": {
        "description": "Specifies the shared access signature token which provides access to the base artifacts location."
      }
    },
    "dscVersion": {
      "type": "string",
      "metadata": {
        "description": "Specifies the version of the DSC extension to use."
      }
    },
    "configurationFileUrl": {
      "type": "string",
      "metadata": {
        "description": "Specifies the URI of the DSC configuration script."
      }
    },
    "configurationFunction": {
      "type": "string",
      "metadata": {
        "description": "Specifies the function to be executed in the DSC configuration script."
      }
    }
  },
  "variables": {
    "imagePublisher": "[parameters('publisher')]",
    "imageOffer": "[parameters('offer')]",
    "imageSKU": "[parameters('sku')]",
    "planPublisher": "[parameters('publisher')]",
    "planProduct": "[parameters('offer')]",
    "planName": "[parameters('sku')]",
    "nicName": "[concat(parameters('machineName'),'-Nic')]",
    "nicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]",
    "machineId": "[resourceId('Microsoft.Compute/virtualMachines',parameters('machineName'))]",
    "configurationId": "[concat(resourceId('Microsoft.Compute/virtualMachines',parameters('machineName')),'/extensions/configure')]",
    "osDiskName": "[concat(resourceGroup().name,'-',parameters('machineName'),'-osdisk')]",
    "osDiskUri": "[concat('http://',parameters('vhdStorageAccount'),'.blob.core.windows.net/vhds/',variables('osDiskName'),'.vhd')]"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "tags": {
        "displayName": "VdaNic"
      },
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('privateIp')]",
              "subnet": {
                "id": "[parameters('subnetId')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[parameters('lbBapId')]"
                }
              ],
              "loadBalancerInboundNatRules": "[parameters('lbInboundRules')]"
            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('machineName')]",
      "tags": {
        "displayName": "VdaVM"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[parameters('availabilitySetId')]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('machineSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('machineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "image": {
              "uri": "[parameters('imageUri')]"
            },
            "osType": "Windows",
            "name": "osdisk",
            "vhd": {
              "uri": "[variables('osDiskUri')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[variables('nicId')]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "[concat(parameters('machineName'), '/config')]",
          "apiVersion": "2015-06-15",
          "tags": {
            "displayName": "VdaConfiguration"
          },
          "location": "[parameters('location')]",
          "dependsOn": [
            "[variables('machineId')]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "[parameters('dscVersion')]",
            "settings": {
              "modulesUrl": "[parameters('configurationFileUrl')]",
              "sasToken": "[parameters('artifactsLocationSasToken')]",
              "configurationFunction": "[parameters('configurationFunction')]",
              "Properties": {
                "DomainName": "[parameters('domainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:adminPassword"
                },
                "DomainController": "[parameters('domainControllerFQDN')]",
                "DomainControllerIp": "[parameters('domainControllerIp')]",
                "DeliveryController": "[parameters('deliveryControllerFQDN')]",
                "DeploymentFQDN": "[parameters('deploymentFQDN')]",
                "GatewayFQDN": "[parameters('gatewayFQDN')]",
                "Packages": "[parameters('packages')]",
                "PublishedApplications": "[parameters('publishedApplications')]",
                "StoreFrontUrl": "[parameters('storeFrontUrl')]"
              }
            },
            "protectedSettings": {
              "Items": {
                "adminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    }
  ]
}
